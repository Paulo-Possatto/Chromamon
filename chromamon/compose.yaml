services:
  postgres:
    container_name: postgres
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=${PG_DATABASE_NAME}'
      - 'POSTGRES_PASSWORD=${PG_DATABASE_PASS}'
      - 'POSTGRES_USER=${PG_DATABASE_USER}'
    ports:
      - '5433:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_DATABASE_USER} -d ${PG_DATABASE_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  mongodb:
    image: 'mongo:latest'
    environment:
      - 'MONGO_INITDB_DATABASE=${MG_DATABASE_NAME}'
      - 'MONGO_INITDB_ROOT_PASSWORD=${MG_DATABASE_PASS}'
      - 'MONGO_INITDB_ROOT_USERNAME=${MG_DATABASE_USER}'
    ports:
      - '27017:27017'
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  prometheus:
    image: 'prom/prometheus'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  grafana:
    image: 'grafana/grafana:latest'
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - 'GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER}'
      - 'GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASS}'
  wiremock:
    image: 'wiremock/wiremock:latest'
    ports:
      - "9030:8080"
    volumes:
      - ./__files:/home/wiremock/__files
      - ./mappings:/home/wiremock/mappings
    entrypoint: ["/docker-entrypoint.sh", "--global-response-templating", "--disable-gzip", "--verbose"]
